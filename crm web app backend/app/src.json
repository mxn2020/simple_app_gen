{"name": "README.md", "file_path": "/README.md", "description": "Documentation file with project overview and instructions", "features": [{"name": "User Authentication", "description": "Allow users to register, login, and manage their accounts securely."}, {"name": "Lead Collection", "description": "Automatically collect leads from Facebook and store them in the database."}, {"name": "Lead Management", "description": "Provide functionality to view, edit, and categorize leads for better organization."}, {"name": "Admin Panel", "description": "Create an admin panel to manage users, leads, and overall system settings."}, {"name": "Database Integration", "description": "Integrate SQLite database for storing user information, leads, and system data."}, {"name": "API Endpoints", "description": "Implement RESTful API endpoints for interacting with the backend system."}, {"name": "Data Analytics", "description": "Include data analytics tools to generate reports and insights based on lead data."}, {"name": "Notifications", "description": "Set up notifications for new leads, system updates, and user activity."}], "file_path_as_array": ["app", "src"], "file_name": "README.md", "code": "# CRM Web App\n\n## Overview\nThis project is a CRM web application backend developed in Python with Flask. It is designed for lead collection and management from Facebook leads. The application includes features such as user authentication, lead collection, lead management, admin panel, database integration with SQLite, RESTful API endpoints, data analytics, and notifications.\n\n## Instructions\n1. Clone the repository\n2. Install dependencies using `pip install -r requirements.txt`\n3. Run the Flask application by executing `python app.py`\n4. Access the application at http://localhost:5000\n5. Use the provided features for user authentication, lead management, and data analytics\n\n## Features\n- User Authentication: Register, login, and manage user accounts securely\n- Lead Collection: Automatically collect leads from Facebook\n- Lead Management: View, edit, and categorize leads for organization\n- Admin Panel: Manage users, leads, and system settings\n- Database Integration: Store user information and leads in SQLite database\n- API Endpoints: Interact with the backend system using RESTful APIs\n- Data Analytics: Generate reports and insights based on lead data\n- Notifications: Receive notifications for new leads and system updates\n", "file_instruction": "This README.md file provides an overview of the CRM Web App project, setup instructions, and details on using the available features. It includes information on cloning the repository, installing dependencies, running the Flask application, accessing the application, and using the features provided. Refer to this documentation for guidance on using and understanding the project."}